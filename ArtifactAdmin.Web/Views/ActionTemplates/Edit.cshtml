@model ArtifactAdmin.BL.ModelsDTO.ViewActionTemplateDto

@{
    ViewBag.Title = "Edit";
}

<h2>Змінити</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    string NameChar = "Characteristic.Name";
    string NamePred = "Predisposition1.Name";
    string NameProp = "Property.Name";
    string selResult = Model.ActionTemplateDto.ActionTemplateResult.ToString();
    <div class="form-horizontal">
        @*<h4>Шаблон дії</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ActionTemplateDto.Id)
        @Html.HiddenFor(model => model.ActionTemplateDto.ActionTemplateResult)
        @Html.HiddenFor(model => model.ActionTemplateDto.BlockProbability)
        <div class="form-group">
            @*@Html.LabelFor(model => model.ActionTemplateDto.Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2" for="ActionTemplateDto_Name">Шаблон дії</label>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ActionTemplateDto.Name, new { htmlAttributes = new { @class = "form-control", rows = "1", cols = "100" } })
                @Html.ValidationMessageFor(model => model.ActionTemplateDto.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OneProbability, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OneProbability, new { htmlAttributes = new { @class = "form-control", onchange = "ValidateProbability()" } })
                @Html.ValidationMessageFor(model => model.OneProbability, "", new { @class = "text-danger" })
                <input type="text" class="text-danger" id="MessageError" value="" style="width:100%" hidden>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="ActionTemplateDto_ActionTemplateResult1">Виберіть результат дії:</label>
            <div class="col-md-10">
                <table>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.ActionTemplateDto.ActionTemplateResult1.PredispositionResultModifier)
                        </td>
                        <td>
                            @Html.DisplayNameFor(model => model.ActionTemplateDto.ActionTemplateResult1.ExperienceModifier)
                        </td>
                        <td>
                            @Html.DisplayNameFor(model => model.ActionTemplateDto.ActionTemplateResult1.ArtifactPosibility)
                        </td>
                        <td>
                            @Html.DisplayNameFor(model => model.ActionTemplateDto.ActionTemplateResult1.GoldModifier)
                        </td>
                        <td>
                            @Html.DisplayNameFor(model => model.ActionTemplateDto.ActionTemplateResult1.QuestTemplate1)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DropDownListFor(m => m.NameResult, new SelectList(Model.ActionTemplateResults, "Id", "PredispositionResultModifier", selResult), new {@class = "form-control", id = "item1", onchange = "javascript:SelId(this,document.getElementById('ActionTemplateDto_ActionTemplateResult'));"})
                        </td>
                        <td>
                            @Html.DropDownListFor(m => m.NameResult, new SelectList(Model.ActionTemplateResults, "Id", "ExperienceModifier", selResult), htmlAttributes: new {@class = "form-control", id = "item2", onchange = "javascript:SelId(this,document.getElementById('ActionTemplateDto_ActionTemplateResult'));"})
                        </td>
                        <td>
                            @Html.DropDownListFor(m => m.NameResult, new SelectList(Model.ActionTemplateResults, "Id", "ArtifactPosibility", selResult), htmlAttributes: new {@class = "form-control", id = "item3", onchange = "javascript:SelId(this,document.getElementById('ActionTemplateDto_ActionTemplateResult'));"})
                        </td>
                        <td>
                            @Html.DropDownListFor(m => m.NameResult, new SelectList(Model.ActionTemplateResults, "Id", "GoldModifier", selResult), htmlAttributes: new {@class = "form-control", id = "item4", onchange = "javascript:SelId(this,document.getElementById('ActionTemplateDto_ActionTemplateResult'));"})
                        </td>
                        <td>
                            @Html.DropDownListFor(m => m.NameResult, new SelectList(Model.ActionTemplateResults, "Id", "QuestTemplate1", selResult), htmlAttributes: new {@class = "form-control", id = "item5", onchange = "javascript:SelId(this,document.getElementById('ActionTemplateDto_ActionTemplateResult'));"})
                        </td>
                    </tr>
                </table>

                @Html.ValidationMessageFor(model => model.ActionTemplateDto.ActionTemplateResult, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <input type="button" id="newRezult" value="Новий результат дії:" class="control-label col-md-2" onclick="javascript: NewResult();">
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Predisposition, new {disabled = "disabled"})
                @Html.TextBoxFor(model => model.Experience, new {disabled = "disabled"})
                @Html.TextBoxFor(model => model.Posibility, new {disabled = "disabled"})
                @Html.TextBoxFor(model => model.Gold, new {disabled = "disabled"})<br/>
                @Html.ValidationMessageFor(model => model.Predisposition, "", new {@class = "text-danger"})
                @Html.ValidationMessageFor(model => model.Experience, "", new {@class = "text-danger"})
                @Html.ValidationMessageFor(model => model.Posibility, "", new {@class = "text-danger"})
                @Html.ValidationMessageFor(model => model.Gold, "", new {@class = "text-danger"})
            </div>
        </div>
        <table class="table">
            <colgroup>
                <col style="width: 250px" />
                <col style="width: 100px" />
                <col style="width: 250px" />
            </colgroup>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Characteristics)<br />
                    @Html.ListBoxFor(model => model.Characteristics, new MultiSelectList(Model.Characteristics, "Id", "Name"), new { size = 6, style = "width:100%" })
                </td>
                <td style="text-align: center">
                    <input type="button" id="addChar" value=">"
                           onclick="javascript: MoveObj(document.getElementById('Characteristics'), document.getElementById('SelectedCharacteristics'));">
                    <br />
                    <input type="button" id="remChar" value="<"
                           onclick="javascript: MoveObj(document.getElementById('SelectedCharacteristics'), document.getElementById('Characteristics'));">
                </td>
                <td>
                    @Html.LabelFor(model => model.SelectedCharacteristics)<br />
                    @Html.ListBoxFor(model => model.SelectedCharacteristics, new MultiSelectList(Model.SelectedCharacteristics, "Characteristics", NameChar), new { size = 6, style = "width:100%" })
                </td>
            </tr>
        </table>
        <table class="table">
            <colgroup>
                <col style="width: 200px" />
                <col style="width: 200px" />
                <col style="width: 100px" />
                <col style="width: 300px" />
            </colgroup>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Predispositions)<br />
                    @Html.ListBoxFor(model => model.Predispositions, new SelectList(Model.Predispositions, "Id", "Name"), new { size = 6, style = "width:200px" })
                </td>
                <td style="text-align: center">
                    @Html.LabelFor(model => model.OneLow)<br />
                    @Html.EditorFor(model => model.OneLow)<br />
                    @Html.LabelFor(model => model.OneHigh)<br />
                    @Html.EditorFor(model => model.OneHigh)
                    <input type="text" class="text-danger" id="MessageErrorPredisposition" value="" style="width:100%" hidden>
                </td>
                <td style="text-align: center">
                    <input type="button" id="addPred" value=">"
                           onclick="javascript: MoveToPred(document.getElementById('Predispositions'), document.getElementById('SelectedPredispositions'));">
                    <br />
                    <input type="button" id="remPred" value="<"
                           onclick="javascript: MoveFromPred(document.getElementById('SelectedPredispositions'), document.getElementById('Predispositions'));">
                </td>
                <td>
                    @Html.LabelFor(model => model.SelectedPredispositions)<br />
                    @Html.ListBoxFor(model => model.SelectedPredispositions, new MultiSelectList(Model.SelectedPredispositions, "Predisposition", NamePred), new { size = 6, style = "width:200px" })
                    @Html.ListBoxFor(model => model.Lows, new MultiSelectList(Model.Lows), new { size = 6, style = "width:50px" })
                    @Html.ListBoxFor(model => model.Highs, new MultiSelectList(Model.Highs), new { size = 6, style = "width:50px" })
                </td>
            </tr>
        </table>
        <table class="table">
            <colgroup>
                <col style="width: 200px" />
                <col style="width: 200px" />
                <col style="width: 100px" />
                <col style="width: 300px" />
            </colgroup>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Properties)<br />
                    @Html.ListBoxFor(model => model.Properties, new SelectList(Model.Properties, "Id", "Name"), new { size = 6, style = "width:200px" })
                </td>
                <td style="text-align: center">
                    @Html.LabelFor(model => model.OneAppearance)<br />
                    @Html.EditorFor(model => model.OneAppearance)
                </td>
                <td style="text-align: center">
                    <input type="button" id="addProp" value=">"
                           onclick="javascript: MoveToProp(document.getElementById('Properties'), document.getElementById('SelectedProperties'));">
                    <br />
                    <input type="button" id="remProp" value="<"
                           onclick="javascript: MoveFromProp(document.getElementById('SelectedProperties'), document.getElementById('Properties'));">
                </td>
                <td>
                    @Html.LabelFor(model => model.SelectedProperties)<br />
                    @Html.ListBoxFor(model => model.SelectedProperties, new MultiSelectList(Model.SelectedProperties, "Properties", NameProp), new { size = 6, style = "width:200px" })
                    @Html.ListBoxFor(model => model.Appearances, new MultiSelectList(Model.Appearances), new { size = 6, style = "width:100px" })
                </td>
            </tr>
        </table>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Записати" class="btn btn-default" onfocus="javascript: SetProbability();" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Повернутись до списку", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    function SelId(sel, hiddenId) {
        var selId = "";
        var item1 = document.getElementById("item1");
        var item2 = document.getElementById("item2");
        var item3 = document.getElementById("item3");
        var item4 = document.getElementById("item4");
        var item5 = document.getElementById("item5");
        var i = sel.selectedIndex;
        if (i != -1) {
                selId = sel.options[i].value;
                hiddenId.value = Number(selId);
                item1.options[i].selected = true;
                item2.options[i].selected = true;
                item3.options[i].selected = true;
                item4.options[i].selected = true;
                item5.options[i].selected = true;
        }
        document.getElementById("Predisposition").disabled = true;
        document.getElementById("Experience").disabled = true;
        document.getElementById("Posibility").disabled = true;
        document.getElementById("Gold").disabled = true;
    }
    function NewResult() {
        var hiddenId = document.getElementById("ActionTemplateDto_ActionTemplateResult");
        hiddenId.value = 0;
        document.getElementById("Predisposition").disabled = false;
        document.getElementById("Experience").disabled = false;
        document.getElementById("Posibility").disabled = false;
        document.getElementById("Gold").disabled = false;
    }
    function ValidateProbability() {
        var val = document.getElementById("OneProbability").value.toString();
        var validateProbability = Number(val);
        var message = document.getElementById("MessageError");
        if (Number(val) == 0) {
            message.value = "Введіть число від 0 до 1 !";
            message.hidden = false;
        }
        else {
            if (validateProbability > 0 & validateProbability < 1) {
                document.getElementById("ActionTemplateDto_BlockProbability").value = validateProbability;
                message.value = "";
                message.hidden = true;
            }
        }
    }

    function MoveObj(from, to) {
        var selId = '';
        var selText = '';
        for (var i = from.options.length - 1; i >= 0; i--) {
            if (from.options[i].selected == true) {
                selId = from.options[i].value;
                selText = from.options[i].text;
                var newRow = new Option(selText, selId);
                to.options[to.length] = newRow;
                from.options[i] = null;
            }
        }
    }

    function MoveToPred(from, to) {
        var selId = '';
        var selText = '';
        var i = from.selectedIndex;
        var low = Number(document.getElementById("OneLow").value);
        var high = Number(document.getElementById("OneHigh").value);
        var lows = document.getElementById("Lows");
        var highs = document.getElementById("Highs");
        var message = document.getElementById("MessageErrorPredisposition");
        if (i != -1) {
            if (low >= 0 & high >= 0 & low <= high) {
                selId = from.options[i].value;
                selText = from.options[i].text;
                var newRow = new Option(selText, selId);
                to.options[to.length] = newRow;
                var newRow = new Option(low, low);
                lows.options[lows.length] = newRow;
                var newRow = new Option(high, high);
                highs.options[highs.length] = newRow;
                from.options[i] = null;
                message.value = "";
                message.hidden = true;
            }
            else {
                if (low < 0) {
                    message.value = "Введіть значення від > 0!";
                }
                else {
                    message.value = "";
                }
                if (high < 0) {
                    message.value = message.value + " Введіть значення до > 0!";
                }
                if (low > high) {
                    message.value = message.value + " Введіть значення від < значення до!";
                }
                message.hidden = false;
            }
        }
    }

    function MoveFromPred(from, to) {
        var selId = '';
        var selText = '';
        var lows = document.getElementById("Lows");
        var highs = document.getElementById("Highs");
        for (var i = from.options.length - 1; i >= 0; i--) {
            if (from.options[i].selected == true) {
                selId = from.options[i].value;
                selText = from.options[i].text;
                var newRow = new Option(selText, selId);
                to.options[to.length] = newRow;
                from.options[i] = null;
                lows.options[i] = null;
                highs.options[i] = null;
            }
        }
    }
    function MoveToProp(from, to) {
        var selId = '';
        var selText = '';
        var i = from.selectedIndex;
        var oneAppearance = document.getElementById("OneAppearance").checked;
        var appearances = document.getElementById("Appearances");
        if (i != -1) {
            selId = from.options[i].value;
            selText = from.options[i].text;
            var newRow = new Option(selText, selId);
            to.options[to.length] = newRow;
            newRow = new Option(oneAppearance, oneAppearance);
            appearances.options[appearances.length] = newRow;
            from.options[i] = null;
        }
    }

    function MoveFromProp(from, to) {
        var selId = '';
        var selText = '';
        var appearances = document.getElementById("Appearances");
        for (var i = from.options.length - 1; i >= 0; i--) {
            if (from.options[i].selected == true) {
                selId = from.options[i].value;
                selText = from.options[i].text;
                var newRow = new Option(selText, selId);
                to.options[to.length] = newRow;
                from.options[i] = null;
                appearances.options[i] = null;
            }
        }
    }

    function SetProbability() {
        if (document.getElementById("ActionTemplateDto_BlockProbability").value == 0) {
            document.getElementById("ActionTemplateDto_BlockProbability").value = 0.25;
        }
        var charact = document.getElementById("SelectedCharacteristics");
        var pred = document.getElementById("SelectedPredispositions");
        var lows = document.getElementById("Lows");
        var highs = document.getElementById("Highs");
        var prop = document.getElementById("SelectedProperties");
        var apper = document.getElementById("Appearances");
        var i = 0;
        for (i = charact.options.length - 1; i >= 0; i--) {
            charact.options[i].selected = true;
        }
        for (i = pred.options.length - 1; i >= 0; i--) {
            pred.options[i].selected = true;
            lows.options[i].selected = true;
            highs.options[i].selected = true;
        }
        for (i = prop.options.length - 1; i >= 0; i--) {
            prop.options[i].selected = true;
            apper.options[i].selected = true;
        }
    }
</script>
}
