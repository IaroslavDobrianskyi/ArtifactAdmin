@model ArtifactAdmin.BL.ModelsDTO.ViewActionDescriptionDto

@{
    ViewBag.Title = "Create";
}

<h2>Створити новий запис</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Опис дій</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ActionDescriptionDto.ActionTemplate)
       @Html.HiddenFor(model => model.ActionDescriptionDto.MapZone)
        @Html.HiddenFor(model => model.ActionDescriptionDto.Race)
        @Html.HiddenFor(model => model.ActionDescriptionDto.Class)
        <div class="form-group">
            @Html.LabelFor(model => model.ActionDescriptionDto.ActionTemplate1.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.ActionTemplateDto, new SelectList(Model.ActionTemplateDto,"id","Name"),"Виберіть назву дії", 
                new { @class = "form-control",
                      onchange = "javascript:SelId(this,document.getElementById('ActionDescriptionDto_ActionTemplate'));"
           })
                @Html.ValidationMessageFor(model => model.ActionDescriptionDto.ActionTemplate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActionDescriptionDto.MapZone1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MapZoneDto, new SelectList(Model.MapZoneDto,"id","ZoneName"), "Виберіть зону карти",htmlAttributes: new { @class = "form-control" ,
                onchange = "javascript:SelId(this,document.getElementById('ActionDescriptionDto_MapZone'))"
           })
                @Html.ValidationMessageFor(model => model.MapZoneDto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActionDescriptionDto.Race1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.NameRace, new SelectList(Model.RaceDto, "id", "Description"), "Виберіть расу", htmlAttributes: new
           {
               @class = "form-control",
               onchange = "javascript:SelId(this,document.getElementById('ActionDescriptionDto_Race'))"
           })
                @Html.ValidationMessageFor(model => model.RaceDto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActionDescriptionDto.Class1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.NameClass, new SelectList(Model.ClassDto, "id", "Description"), "Виберіть клас", htmlAttributes: new
           {
               @class = "form-control",
               onchange = "javascript:SelId(this,document.getElementById('ActionDescriptionDto_Class'))"
           })
                @Html.ValidationMessageFor(model => model.ClassDto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActionDescriptionDto.ActionText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ActionDescriptionDto.ActionText, new { htmlAttributes = new { @class = "form-control", rows = "10", cols = "50" } })
                @Html.ValidationMessageFor(model => model.ActionDescriptionDto.ActionText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Записати" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Повернутись до списку", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    function SelId(Sel,HiddenId)
    {
        var SelId = "";
        for (i = 0; i < Sel.options.length; i++)
        {
            if (Sel.options[i].selected == true)
            {
                SelId = Sel.options[i].value;
                HiddenId.value = Number(SelId);
                break;
            }
        }
    }
    </script>
}
