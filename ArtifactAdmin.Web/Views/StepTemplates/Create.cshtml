@model ArtifactAdmin.BL.ModelsDTO.ViewStepTemplateDto

@{
    ViewBag.Title = "Create";
}

<h2>Створити новий запис</h2>


@using (Html.BeginForm())
{ 
    @Html.AntiForgeryToken()
    string Obj = "StepObjectDto.Name";
    <div class="form-horizontal">
        <h4>Шаблон кроку- об'єкти</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model=>model.StepTemplate.Desire)
        <div class="form-group">
            @Html.LabelFor(model => model.StepTemplate.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.StepTemplate.Description, new { htmlAttributes = new { @class = "form-control", rows = "10", cols = "50" } })
                @Html.ValidationMessageFor(model => model.StepTemplate.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StepTemplate.StepText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.StepTemplate.StepText, new { htmlAttributes = new { @class = "form-control", rows = "10", cols = "50" } })
                @Html.ValidationMessageFor(model => model.StepTemplate.StepText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StepTemplate.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.StepTemplate.Name, new { htmlAttributes = new { @class = "form-control", rows = "10", cols = "50" } })
                @Html.ValidationMessageFor(model => model.StepTemplate.Name, "", new { @class = "text-danger" })
            </div>
        </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StepTemplate.Desire1, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.DesireDto, new SelectList(Model.DesireDto, "Id", "Name"), "Виберіть бажання", new {@class = "form-control", onchange = "javascript:SelId(this,document.getElementById('StepTemplate_Desire'));"})
            @Html.ValidationMessageFor(model => model.StepTemplate.Desire, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StepTemplate.IsNotVisibleInFlow, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.StepTemplate.IsNotVisibleInFlow, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.StepTemplate.IsNotVisibleInFlow, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
            @Html.LabelFor(model => model.StepTemplate.IsQuestStarter, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StepTemplate.IsQuestStarter, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StepTemplate.IsQuestStarter, "", new { @class = "text-danger" })
            </div>
        </div>

    <table class="table">
            <tr>
            <td>
                @Html.LabelFor(model => model.StepObject)<br />
                @Html.ListBoxFor(model => model.StepObject, new MultiSelectList(Model.StepObject, "idObjType", Obj), new {size = 8, style = "width:250px"})
            </td>

            <td style="text-align: center">
                @Html.LabelFor(model => model.StepObjectType)<br />
                @Html.ListBoxFor(model => model.StepObjectType, new SelectList(Model.StepObjectType, "Id", "Name"), new {size = 4, onclick = "javascript:AddTypObj();"})
        <span id="TypeMes" class="alert-warning"></span>
        <br/>
        <input type="button" id="add" value=">"
               onclick="javascript: MoveObj(document.getElementById('StepObject'), document.getElementById('SelectedStepObject'));">
        <br/>
        <input type="button" id="rem" value="<"
               onclick="javascript: MoveObj(document.getElementById('SelectedStepObject'), document.getElementById('StepObject'));">
    </td>
                <td>
                    @Html.LabelFor(model => model.SelectedStepObject)<br />
                    @Html.ListBoxFor(model => model.SelectedStepObject, new MultiSelectList(Model.SelectedStepObject, "idObjType", Obj),
new { size = 8, style = "width:250px" })
                    @*@Html.ValidationMessageFor(model => model.selectedStepObject, "", new { @class = "text-danger" })*@
                    <span id="ObjMes" class="alert-warning"></span>
                </td>
            </tr>
        </table>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Записати" class="btn btn-default" onfocus="javascript: SelAll();" />
                </div>
            </div>
</div>
}

<div>
    @Html.ActionLink("Повернутись до списку", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    function MoveObj(from, to)
    {
        var selId = '';
        var selText = '';
        // Move rows from SS1 to SS2 from bottom to top
        for (i = from.options.length - 1; i >= 0; i--) {
            if (from.options[i].selected == true) {
                selId = from.options[i].value;
                selText = from.options[i].text;
                var newRow = new Option(selText, selId);
                to.options[t.length] = newRow;
                from.options[i] = null;
            }
        }
    }
    function SelectSort(SelList) {
        var ID = '';
        var Text = '';
        for (x = 0; x < SelList.length - 1; x++) {
            for (y = x + 1; y < SelList.length; y++) {
                if (SelList[x].text > SelList[y].text) {
                    // Swap rows
                    ID = SelList[x].value;
                    Text = SelList[x].text;
                    SelList[x].value = SelList[y].value;
                    SelList[x].text = SelList[y].text;
                    SelList[y].value = ID;
                    SelList[y].text = Text;
                }
            }
        }
    }
    function AddTypObj()
    {
        var SelID = '';
        var SelText = '';
        var From = document.getElementById("StepObjectType");
        var To = document.getElementById("StepObject");
        var To1 = document.getElementById('SelectedStepObject');
        var ObjEx=false;
        for (i = From.options.length - 1; i >= 0; i--) {
            if (From.options[i].selected == true) {
                SelID = From.options[i].value;
                SelText = From.options[i].text;
                if (SelID != "")
                {
                    for (j = To.options.length - 1; j >= 0; j--)
                    {
                        if (To.options[j].value.substring(To.options[j].value.indexOf(".") + 1) == SelID)
                        {
                            To.options[j].selected = true;
                            ObjEx = true;
                        }
                    }
                    if (!ObjEx)
                    {
                            document.getElementById("TypeMes").textContent = "Тип " + SelText + " вже вибраний !";
                    }
                    else
                        document.getElementById("TypeMes").textContent = "";
                }
                else
                    document.getElementById("TypeMes").textContent = "";
                
            }
        }
        MoveObj(To, To1);
    }
    function SelAll()
    {
        var OT = document.getElementById("StepObjectType");
        var SO = document.getElementById("StepObject");
        var To = document.getElementById('SelectedStepObject');
        var i = 0 ;
        for (i = To.options.length - 1; i >= 0; i--)
        {
            To.options[i].selected = true;
        }
        for (i = OT.options.length - 1; i >= 0; i--) {
            OT.options[i].selected = true;
        }
        for (i = SO.options.length - 1; i >= 0; i--) {
            SO.options[i].selected = true;
        }
    }
    function SelId(Sel, HiddenId) {
        var SelId = "";
        for (i = 0; i < Sel.options.length; i++) {
            if (Sel.options[i].selected == true) {
                SelId = Sel.options[i].value;
                HiddenId.value = Number(SelId);
                break;
            }
        }
    }
</script>
}
